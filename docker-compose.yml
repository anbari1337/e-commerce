
services:
  # MongoDB for Inventory
  db-inventory:
    networks:
      - my-app
    image: mongo
    container_name: db-inventory
    ports:
      - "27017:27017"

  # MongoDB for Product
  db-product:
    networks:
      - my-app
    image: postgres
    container_name: db-product
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=product-database

  # PostgreSQL for Order
  db-order:
    networks:
      - my-app
    image: postgres
    container_name: db-order
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=order-database

  ## Product service
  product-service:
    networks:
      - my-app
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://db-product:27017/product-database
    depends_on:
      - db-product

  ## Order service
  order-service:
    networks:
      - my-app
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-order:5432/order-database
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - db-order
      - kafka
      - zookeeper

  ## Inventory service
  inventory-service:
    networks:
      - my-app
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: inventory-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://db-inventory:27017/inventory-database
    depends_on:
      - db-inventory
      - kafka
      - zookeeper

  ## Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - my-app

  ## Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - my-app

networks:
  my-app:
    driver: bridge
